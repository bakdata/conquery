dist: xenial

language: java
os:
  - linux

jdk:
  - openjdk11

jobs:
  include:
    - stage: "Tests"
      
    #test frontend
      name: "Frontend Tests"
      install:
        -  cd frontend
        -  mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true

    #build backend and run all non-integration tests
    - name: "Unit Tests"
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -DexcludedGroups="INTEGRATION_PROGRAMMATIC, INTEGRATION_JSON"

    #build and test only INTEGRATION_PROGRAMMATIC
    - name: "Programmatic Integration Tests"
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -Dgroups="INTEGRATION_PROGRAMMATIC"

    #build and test only INTEGRATION_JSONs
    - name: "Integration Tests: Authentication Tests"
      env:
        - CONQUERY_TEST_DIRECTORY=tests/auth
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -Dgroups="INTEGRATION_JSON"

    - name: "Integration Tests: Filter Tests"
      env:
        - CONQUERY_TEST_DIRECTORY=tests/filter
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -Dgroups="INTEGRATION_JSON"

    - name: "Integration Tests: Query Tests"
      env:
        - CONQUERY_TEST_DIRECTORY=tests/query
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -Dgroups="INTEGRATION_JSON"

    - name: "Integration Tests: Aggregator Tests"
      env:
        - CONQUERY_TEST_DIRECTORY=tests/aggregator
      install:
        - cd backend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
      script: mvn test -B -DskipDockerTests=true -Dgroups="INTEGRATION_JSON"
  

    #Deploy
    - stage: "Deploy Tag to NPM"
      if: tag IS present
      install:
        - cd frontend
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
        - chmod +x frontend/scripts/deploy-npm.sh
      script: sh frontend/scripts/deploy-npm.sh

    - stage: "Deploy Develop to Heroku"
      if: branch = develop AND type = push
      install: 
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
        - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      script: bash frontend/scripts/deploy-heroku-docker.sh conquery-dev

    - stage: "Deploy Master to Heroku"
      if: branch = master AND type = push
      install: 
        - mvn -T 1C install -DskipTests=true -Dmaven.javadoc.skip=true -B -V
        - curl https://cli-assets.heroku.com/install-ubuntu.sh | sh
      script: bash frontend/scripts/deploy-heroku-docker.sh conquery


cache:
  directories:
    - "$HOME/.cache"
    - "$HOME/.m2"